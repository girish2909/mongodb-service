# Notes :
-- deployments manages the PODS below them manages .. > replicaset manages a ...> pods ( abstraction of containers)  > container
-- etcd ( cluster brain ) holds current state of all data
# s is optional at last here. if want more details of anything below then add "-o wide" at last like "kubectl get pod -o wide"
kubectl get nodes
kubectl get services
kubectl get deployments
kubectl get replicasets
kubectl get pods

#To get Running deployment information in yaml format:
kubectl get deployment nginx-deployment -o yaml

# To create pod configuration
kubectl create deployment name image option1 option2
kubectl apply -f < configuration yaml file >

# To run any service
 minikube service mongo-express-service --url

# To Edit deployment
kubectl edit deployment < deployment-name >

# Check logs or live live lods : And to get addtional information you need to use describe 
kubectl logs nginx-76d6c9b8c-w78sk
kubectl logs -f nginx-76d6c9b8c-w78sk
kubectl describe pod <pod_name>

# To get inside container/Terminal
kubectl exec -it nginx-deployment-77564fc756-dzw9g -- sh
kubectl exec -it nginx-deployment-77564fc756-dzw9g -- bin/bash
minikube kubectl -- exec --stdin --tty -n default nginx-deployment-77564fc756-dzw9g -- sh

# Delete all services ,deployment, pods
kubectl delete services --all
kubectl delete deployment --all
kubectl delete pods --all
 
# Configurationf file consists of 3 parts
MetaData
Spectification
3rd Part is generated by Container i.e. : Status : It always validate the replicasets with configuration files. If any difference it find then updates the replica as per requirement.



# To run NGINX on k8s cluster pods 
kubectl create deployment nginx --image nginx --port 80 
kubectl expose deployment nginx --name nginx-svc --type NodePort
minikube service nginx-svc


#To encode decode :
Encode > echo FOO | base64
Decode > echo Rk9PCg= | base64 -d